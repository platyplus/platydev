enabled: true

imageConfig:
  repository: nhost/hasura-backend-plus
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

ingress:
  enabled: false
  # tls: false

extraEnv: 
  - name: AUTO_MIGRATE
    value: "false"
  - name: HASURA_ENDPOINT
    valueFrom:
      configMapKeyRef:
        name: "{{ .Release.Name }}-hasura"
        key: endpoint
  - name: HASURA_GRAPHQL_ADMIN_SECRET
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-hasura"
        key: adminSecret
  - name: JWT_KEY
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-hasura"
        key: jwt.key
  - name: S3_ENDPOINT
    valueFrom:
      configMapKeyRef:
        name: "{{ .Release.Name }}-minio"
        key: endpoint
  - name: S3_BUCKET
    valueFrom:
      configMapKeyRef:
        name: "{{ .Release.Name }}-minio"
        key: defaultBuckets
  - name: S3_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-minio"
        key: access-key
  - name: S3_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: "{{ .Release.Name }}-minio"
        key: secret-key
  - name: SERVER_URL
    valueFrom:
      configMapKeyRef:
        name: "{{ .Release.Name }}"
        key: serverUrl
  - name: JWT_ALGORITHM
    valueFrom:
      configMapKeyRef:
        name: "{{ .Release.Name }}-hasura"
        key: jwt.algorithm
cert:
  # email: admin@example.com
  letsencrypt: production # staging or production

# global:
#   hostname: example.com

minio:
  enabled: false
  defaultBuckets: hasura-plus
  # accessKey: 
  #   password: <minio-access-key>
  # secretKey:
  #   password: <minio-secret-key>

hasura:
  enabled: false
  ingress:
    enabled: true
  # adminSecret: <long complicated admin key>
  # jwt: 
    # algorithm: HS256
    # key: <long complicated jwt key>
  # env:
  postgresql:
    enabled: false
    postgresqlDatabase: hasura-backend-plus
    # postgresqlPassword: <secret-postgresql-password>

  
replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


